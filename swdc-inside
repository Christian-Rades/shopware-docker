#!/usr/bin/env bash

if [[ -e /nvm/.fnm ]]; then
  # shellcheck source=/dev/null
  eval $(fnm --fnm-dir=/nvm/.fnm env --shell=bash)
fi

FILE="$0"

if [[ -L "$0" ]]; then
  FILE=$(readlink "$0")
fi

DIR=$(dirname "${FILE}")

# shellcheck source=functions.sh
source "${DIR}/functions.sh"

SHOPWARE_PROJECT="$2"
SHOPWARE_FOLDER="/var/www/html/$SHOPWARE_PROJECT"

modules=(base)

if [[ -n "$SHOPWARE_PROJECT" ]]; then
  modules=(base classic)

  if [[ -d "$SHOPWARE_FOLDER/app" ]]; then
    modules=(base classic-composer classic)
  fi

  if [[ -f "$SHOPWARE_FOLDER/recovery/install/data/sql/install.sql" ]]; then
    modules=(base classic-zip classic)
  fi

  if [[ -f "$SHOPWARE_FOLDER/src/Kernel.php" ]]; then
    modules=(base platform)
  fi

  if [[ -f "$SHOPWARE_FOLDER/PLATFORM_COMMIT_SHA" ]]; then
    modules=(base platform-prod platform)
  fi
fi

# Need to be in docker folder for docker-compose
cd "${DIR}" || exit 1

for module in "${modules[@]}"; do
  for command in "./modules/${module}/"*.sh; do
    NAME=$(basename "$command")
    NAME=${NAME%.*}

    if [[ $NAME == "$1" ]]; then
      # shellcheck source=/dev/null
      source "$command"
      exit 0
    fi
  done
done

cat ./modules/base/header.txt
echo ""
echo ""

/opt/swdc/swdc-inside command-list
